4/11 Funcanimationさわる、log,note,開始それぞれcodeに保存
    noteはpythonで調べたことを記録し最終的に網羅的備忘録になることを想定
4/16(pre) 今後の分析事項  エン創のデータを元に外れたデータの分析、主成分をトラッキングデータを用いて可視化、xTの導入、アニメーション化
    statsbombでエン創の勝敗予測の再現をしたいが各イベントデータで勝敗予測を行って集計する
    複数のファイルに対して予想を繰り返して機械学習できるのか（できそうだけどライブラリでできるのかor自分で作るのか）
4/18
    関数の勉強(ノート参照)
    正規表現初読
    アメフト(NFL)のデータセットは５年分程度ありそう→トラッキングデータはパッと見る限りわからない
    ブンデスリーガのコンペティションが開催されていた模様
4/23
    各データファイルに対して回帰させて得点予想により勝敗予測する
    →xGに近くなるのでは？？
    u taitotaka p:notcapital not include number
    2週間に1回進捗報告、聞きたいことは逐次尋ねる
    基礎統計量たくさん出してサマリーを作る
    →FBrefである程度の答え合わせ可能
    statsbombpyで可視化する為の練習
4/30
    PitchIQの参照
5/1
    statsbombpyのサマリー作成（360のデータを使いたい場合にはマージしたものでないと難しい）
    よって360を使わないイベントデータからサマリーを作成しデータを概観する(特徴的な値について可視化する等)
5/7
    サマリーを作成するためにydata-profilingを利用
    チームごとに分割してサマリーを作ることでチーム毎の傾向を見ることができる
5/8
    チーム毎に分割してydata-profilingを利用
    [ブラジル]
    ・DF陣がボールの受け手や関与する機会が多い、ただしNeymarはボールに関わる機会が多い
    →ネイマールにフォーカスした分析を行う
    ・Eder Militaoのボール関与に対してレシーバーとなる場面が少ない
    →DF陣のパス方向が左に向いているのでは？(Neymarが左HSに降りて受けたがることに繋がる？)
    ・Pass angleのマイナス方向が右方向に偏っている？？
    →左起点で右からやり直しているのでは？？[Passmapで確認できそう]
    [Croatia]
    ・Brazilに比べて中盤３枚がプレーに関与する頻度が高い
    →こちらもPass mapを使って連携を確認できそう
    
    全体的にプレーの組み立てによる部分が可視化しやすいが崩しや得点場面を切り取ったものは読み取りにくいと言えそう
    →ydata-profilingの場面を切り取ったものを作成することでより細かく分析できる？？？
5/9
    NeymarやCroatiaの選手を抽出したdataframeを作成
    →Croatiaの選手に対してPass_angleの方向性は見られたがNeymarの可視化にはつながらない
    →Carryはトラッキングデータを可視化できないと解釈を行えないのでは？？
    ↪︎Croatiaの3選手を参考にして可視化可能か実装してみる
    xGを元にFranceMoroccoの解析に取り組む
    →xGの値とエン創の3値分類で結果が異なっているので示唆がある試合だと考えられる、一方でxGと試合結果が一致しているようにデータの概観から特徴を得やすい試合なのではないか
5/14
    QWCの全体のydataprofiling
5/15
    QWCの全体のydataprofiling
    →全ての列でやると多すぎて死、数値(Numeric)のみひとまず概観しよう,fillna()でも解析できない
    →Group stage,knockout stageで分割する
5/21
    QWCの全体のydataprofilingで概観した結果、Gs平均やKs平均を超えていると判断できるものにパス本数やパスの距離、counterpressが挙げられる。
    →5/8のlogに繋げられそう
    Pass本数について延長までいくときといかないときでは90minあたりのPass本数に差があるのではないか
    →結果的に延長になりプレイタイムが延びることで試合全体としてはPass本数が増えている、一方でカウンタープレスが多いことはパス本数が少ないことに寄与しているかはわからない、
5/22
    Gsのデータだとminimal=Trueにしないと計算おわらない様子
5/23
    データの修復でほぼ終わり
    →to_fileでhtml形式で出力を保存すること
5/28
    fbrefAPIを調べる
    →url直貼りが早そう
5/30
    Passmapで確認できそう
    →得点前後で変化しそうなので得点が発生するまで作成する
6/4
    PassmapのサンプルとQWCのdfの形式が異なる為QWCのdfの形式に合わせる必要がある。→嘘ですスペルミス
6/5
    パスマップ作ってみたが平均をプロットしているので得点イベントを表すには至らない
6/11
    パスマップを10分ごとに表すことで得点イベントに近いものを表現したい
    個人のパスマップpass plot arrow を描画することで潜在的な脅威を表現する？？
6/12
    10分毎にパスマップつくるけど関数にして機能化したい(いずれ)
    https://seko-note.com/109/  CanadaBelgiumの参考分析
6/13
    Passmapでいくつかのパターンで可視化した
6/18
    10分毎のpassmapを累積させて可視化した
    →前半特に右サイドからの攻撃(パスを繋いでいる)
    30→40などはSTの平均位置が下がっているのでそれまでに比べると押し込まれていることがわかる
    一転して後半では左サイドでの攻撃が増えている
    →色の濃さが相対的な頻度を表わすので判別可能
    指標作るor勝敗予測
    →Jstatsでも応用可能(スポーツデータサイエンスコンペ用)
    duarationから作りたい
6/19
    soccermatricsスタート
    pass arrowのサンプル作成
    →10minごとで切り取るとかなり優劣が見える
    shotイベントデータ、相手チームのpass arrowをプロットすることで流れがわかりやすくなるのでは
6/25
    論文読み->読めるやつなし
    plot→seabornを使って確率密度出すと山がみやすい(頻度を知りたい時)(始点)
6/26
    plot(y_end),plot(y)のseabornを使った可視化
    研究テーマ設定、選手同士の関わりの変化の検出の予測
    →使用するスペースの変化の予測
    →優勢予測
    優勢かどうかについて評価することを最終目標に

    はじめにパスの出し手と受け手の選手idに関する列があったと思うので、選手の受け手をクラスとして識別予測を行うことで、ボールに関与する選手の変化を予測する

    →選手の関わりの変化とパスのフィールドの相関をみる

    →次の段階として使われるフィールドの切り替わりについて選手の関わりの切り替わりの予測に合わせてフィールドが切り替わるのかの予測(フィールドを分割したグリッドにクラスを与えて一致度をみる、みたいな形でしょうか)

    →敵陣ゴールに価値を置いて各グリッドに対してゴールからどのくらい距離があるかをベースに価値を設定し、フィールドの切り替わりで予測した攻撃時に用いられているフィールドについて各グリッドの使用割合と価値の積のような形で指標を作る

    →両チーム分累積和をとり比較することで次の時間の優勢かどうかを判定する
7/1
    パスかドリブルかの予測
    目的変数をtypeにする
7/10
    GCIに注力
    →終わったら院試対策＆研究ちょっと
8/27
    研究再開
    院試勉強は継続
9/2
    スポーツデータサイエンスコンペの報告集2021のサッカー分野読み込み
    →分類タスクで機械学習している報告あり、一方でスポーツデータサイエンスコンペを必ず利用しないといけない訳ではなさそう
    →statsbombのデータで十分かもしれない
9/4
    2日に同じ、2022,23年度も読み込み
    時空間データをsmoteすると時間を捨てて学習しているのでは？？
    →単純に試合数を増やしてデータ数を増やすことに注力すべき？？
    参考資料のデータベース化開始
    →Notionにまとめることで家のPCからでも資料作り可能
9/5
    湯浅先生とおしゃべりして刺激
    現在のテーマで分析開始
    手順を書く
10/1
    イベントデータクリーニング
    scikit-learn?or pycaret.classfficationがimportできないことへの対処
10/2
    →前日のimport出来ないことの続き
    全部pipで消してからインストールし直したら直った
    イベントデータの欠損値補完
    →オフィシャルドキュメントを見ながら埋めれそうなところは埋める
10/8
    pycaretにも入れれない
    →bool値がTrueしかないため？(もしくは1回しかないイベントがあるから？)
        →どっちかわからないがとりあえず前処理必須であることがわかった、bool値は関連しているイベントで起きていないものはFalseで入れる
    counterpressの処置は翌日に回す、今日は'dribble_overrun'まで
10/9
    Series変換でnp.arrayの処理ができたはず
    